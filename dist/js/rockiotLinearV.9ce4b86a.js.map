{"version":3,"sources":["webpack:///./src/plugins/rockiot.gauge.js","webpack:///./src/components/rockiot.linear.vertical.svg.vue?db13","webpack:///src/components/rockiot.linear.vertical.svg.vue","webpack:///./src/components/rockiot.linear.vertical.svg.vue?4a11","webpack:///./src/components/rockiot.linear.vertical.svg.vue"],"names":["Math","PI","setSVGAttributes","elmt","oAtt","prop","setAttributeNS","render","_vm","this","_h","$createElement","_c","_self","ref","$attrs","serial","class","size","attrs","svgheight","svgwidth","staticClass","style","offsetX","offsetY","barHeight","max","factor","pos","animate","needleColor","staticRenderFns","component"],"mappings":"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","file":"js/rockiotLinearV.9ce4b86a.js","sourcesContent":["/* eslint-disable */\nvar NS = \"http://www.w3.org/2000/svg\";\nvar rad = Math.PI / 180;\n\nfunction clearRect(node) {\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n}\n\nexport function setSVGAttributes(elmt, oAtt) {\n    for (var prop in oAtt) {\n      elmt.setAttributeNS(null, prop, oAtt[prop]);\n    }\n}\n\nfunction updateGauge(svg){\n    svg.x = svg.cx + svg.r1 * Math.cos(svg.pa * rad);\n    svg.y = svg.cy + svg.r1 * Math.sin(svg.pa * rad);\n    drawNeedle(svg.cx,svg.cy,svg.r1)\n}\n\nexport function drawNeedle(svg) {\n    let a = Math.atan2(svg.cy-svg.y, svg.cx-svg.x) / rad - 180\n    if ( !! parseInt(svg.hasneedle) ){\n        var nx1 = svg.cx + 5 * Math.cos((a - 90) * rad);\n        var ny1 = svg.cy + 5 * Math.sin((a - 90) * rad);\n    \n        var nx2 = svg.cx + (svg.r1 + 15) * Math.cos(a * rad);\n        var ny2 = svg.cy + (svg.r1 + 15) * Math.sin(a * rad);\n    \n        var nx3 = svg.cx + 5 * Math.cos((a + 90) * rad);\n        var ny3 = svg.cy + 5 * Math.sin((a + 90) * rad);\n    \n        var points = nx1 + \",\" + ny1 + \" \" + nx2 + \",\" + ny2 + \" \" + nx3 + \",\" + ny3;\n        svg.needle.setAttributeNS(null, \"points\", points);\n    }\n}\nexport function drawScale(svg) {\n    \n    if ( !! parseInt(svg.hasscale) ){\n        let sr1 = svg.r1 + 5;\n        let sr2 = svg.r2 - 5;\n        let srT = svg.r1 + 20;\n        //var scale = document.querySelector(\".scale-\" + svg.id);\n        clearRect(svg.scale)//svg.scale)\n        var fs = parseInt(180/svg.ticks)\n        var n = 0;\n        for (var sa = -180; sa <= 0; sa += fs) {\n            var sx1 = svg.cx + sr1 * Math.cos(sa * rad);\n            var sy1 = svg.cy + sr1 * Math.sin(sa * rad);\n            var sx2 = svg.cx + sr2 * Math.cos(sa * rad);\n            var sy2 = svg.cy + sr2 * Math.sin(sa * rad);\n            var sxT = svg.cx + srT * Math.cos(sa * rad);\n            var syT = svg.cy + srT * Math.sin(sa * rad);\n        \n            var scaleLine = document.createElementNS(NS, \"line\");\n            var scaleLineObj = {\n                class: \"scale\",\n                x1: sx1,\n                y1: sy1,\n                x2: sx2,\n                y2: sy2\n            };\n            setSVGAttributes(scaleLine, scaleLineObj);\n        \n            svg.scale.appendChild(scaleLine);\n            var mg = 0\n            if ( n === 0 || n === 10){\n                mg = 4\n            }\n            var scaleText = document.createElementNS(NS, \"text\");\n            var scaleTextObj = {\n                class: \"scale\",\n                x: sxT,\n                y: syT,\n            };\n            setSVGAttributes(scaleText, scaleTextObj);\n            var tick = (parseInt(svg.max)-parseInt(svg.min))/svg.ticks;\n            scaleText.textContent = parseInt(n * (tick)) + (parseInt(svg.min));\n            svg.scale.appendChild(scaleText);\n            n++\n        }\n    }\n  }\n\n  \n\n  export function Animation(options) {\n    var duration = options.duration,\n        currentIteration = 1,\n        iterations = 60 * duration,\n        start = options.start || 0,\n        end = options.end,\n        change = end - start,\n        step = options.step,\n        easing = options.easing || function easeInOutCubic(pos) {\n          // https://github.com/danro/easing-js/blob/master/easing.js\n          if ((pos/=0.5) < 1) return 0.5*Math.pow(pos,3);\n          return 0.5 * (Math.pow((pos-2),3) + 2);\n        };\n\n    function animate() {\n      var progress = currentIteration / iterations, \n          value = change * easing(progress) + start;\n      // console.log(progress + \", \" + value);\n      step(value, currentIteration);\n      currentIteration += 1;\n\n      if(progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    }\n    // start!\n    requestAnimationFrame(animate);\n  }\n\n ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{ref:_vm.$attrs.serial,class:'typeRange rockiot-linear-vertical rockiot-gauge rockiot-gauge-' + _vm.$attrs.size,attrs:{\"height\":_vm.svgheight,\"width\":_vm.svgwidth,\"view-box\":'0 0 ' + _vm.svgwidth + ' ' + _vm.svgheight,\"id\":_vm.$attrs.serial}},[_c('g',{ref:'scale-' + _vm.$attrs.serial,staticClass:\"rockiot-scale\",style:(_vm.scaleStyle),attrs:{\"stroke\":\"red\"}}),_c('rect',{staticClass:\"rockiot-outline \",style:(_vm.fillStyle),attrs:{\"id\":'outline-' + _vm.$attrs.serial,\"x\":_vm.offsetX,\"height\":_vm.svgheight-(_vm.offsetY*2),\"width\":_vm.barHeight,\"y\":_vm.offsetY}}),_c('rect',{staticClass:\"rockiot-fill \",style:(_vm.outlineStyle),attrs:{\"id\":'fill-' + _vm.$attrs.serial,\"x\":_vm.offsetX,\"height\":(_vm.$attrs.max*_vm.factor) - _vm.pos,\"width\":_vm.barHeight,\"y\":_vm.offsetY}}),_c('rect',{staticClass:\"rockiot-needle\",style:(_vm.animate('y')),attrs:{\"id\":'needle-' + _vm.$attrs.serial,\"height\":\"1\",\"y\":(_vm.$attrs.max*_vm.factor) - _vm.pos + _vm.offsetY,\"x\":_vm.offsetX,\"width\":_vm.barHeight,\"fill\":_vm.$attrs.needleColor}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n        <svg :class=\"'typeRange rockiot-linear-vertical rockiot-gauge rockiot-gauge-' + $attrs.size\" :height=\"svgheight\" :width=\"svgwidth\" :view-box=\"'0 0 ' + svgwidth + ' ' + svgheight\" :ref=\"$attrs.serial\" :id=\"$attrs.serial\">\n            \n            <g class=\"rockiot-scale\" :ref=\"'scale-' + $attrs.serial\" stroke=\"red\" :style=\"scaleStyle\"></g>\n\n            <rect class=\"rockiot-outline \" :id=\"'outline-' + $attrs.serial\" :style=\"fillStyle\" \n                :x=\"offsetX\" \n                :height=\"svgheight-(offsetY*2)\" \n                :width=\"barHeight\" \n                :y=\"offsetY\">\n               \n            </rect>\n            <rect class=\"rockiot-fill \" :style=\"outlineStyle\" :id=\"'fill-' + $attrs.serial\" \n                :x=\"offsetX\" \n                :height=\"($attrs.max*factor) - pos\" \n                :width=\"barHeight\" \n                :y=\"offsetY\">\n                \n            </rect>\n\n            <rect :id=\"'needle-' + $attrs.serial\" class=\"rockiot-needle\" :style=\"animate('y')\" height=\"1\" \n                :y=\"($attrs.max*factor) - pos + offsetY\"\n                :x=\"offsetX\" \n                :width=\"barHeight\" :fill=\"$attrs.needleColor\"/>\n        </svg> \n</template>\n\n<script>\nimport { setSVGAttributes } from '@/plugins/rockiot.gauge.js'\n//import 'snapsvg-cjs'\n\n/* eslint-disable */\nexport default {\n    name: 'RockiotSvgLinearV',\n    data:()=>({\n        svgwidth:120,\n        svgheight:370,\n        offsetX: 20,\n        offsetY: 20,\n        barHeight: 40,\n        scaleY: -20,\n        factor: 3.5,\n        svg: null,\n        scaleX: 90,\n        offsetText: 10,\n        pos: 0,\n        snapObject: null,\n        oldValue: 0\n    }),\n    computed:{\n        scaleStyle(){\n            return 'stroke:' + this.$attrs.scaleColor + ';'\n        },\n        scaleTextColor(){\n            return 'stroke:' + this.$attrs.scaleTextColor + ';'\n        },\n        outlineStyle(){\n            return 'fill:' + this.$attrs.barColor +';stroke:' + this.$attrs.barBorderColor + ';' + this.animate('height')\n        },\n        fillStyle(){\n            return 'fill:' + this.$attrs.progressColor + ';stroke:transparent;'\n        },\n    },\n    watch:{\n        '$attrs.barColor'(v){\n            this.fillStyle()\n        }, \n        '$attrs.value'(v){\n            this.pos = parseInt(v)*this.factor\n            this.oldValue = v\n        },\n        \n    },\n    methods:{\n         animate(attr){\n            if ( this.$attrs.animation ) {\n                return 'transition: ' + attr + ' ' + parseFloat(this.$attrs.animation/1000) + 's linear;'\n            }\n            return ''\n        },\n        \n        gaugeSize(){\n            switch(this.$attrs.size){\n                case 'md':\n                    this.offsetY = 20\n                    this.barHeight = 30\n                    this.offsetX = (this.svgwidth/2) - (this.barHeight/2)\n                    this.scaleY = -25\n                    this.scaleX = 70    \n                    break\n                case 'sm':\n                    this.offsetY = 20\n                    this.barHeight = 10\n                    this.offsetX = (this.svgwidth/2) - (this.barHeight/2)\n                    this.scaleY = 0\n                    this.scaleX = 60\n                    break\n                case 'lg':\n                    this.offsetY = 20\n                    this.barHeight = 40\n                    this.offsetX = (this.svgwidth/2) - (this.barHeight/2)\n                    this.scaleX = 80\n                    break\n                default:\n                    this.offsetY = 20\n                    this.barHeight = 30\n                    this.offsetX = (this.svgwidth/2) - (this.barHeight/2)\n                    this.scaleY = -25\n                    this.scaleX = 30\n                    break\n            }\n        },\n        createScale(){\n            var NS = \"http://www.w3.org/2000/svg\";\n            var height = parseInt(this.svgheight) - (this.offsetY*2)\n            var minor = parseInt(this.$attrs.smallscale) ? 10 : 1\n            var fs =  height / parseInt(this.$attrs.ticks) / minor \n            var txt = 0\n\n            for (var n = 0; n <= (parseInt(this.$attrs.ticks)*minor) ; n++) { \n                var scaleLine = document.createElementNS(NS, \"line\");\n                var h = 10\n                if ( !! parseInt(this.$attrs.smallscale) ){\n                    if ( n % 10 === 0 || n === 0 ){\n                        h = 15\n                    }\n                }\n                \n                var xPos = (this.svgwidth/2)\n                var scaleLineObj = {\n                    class: \"scale rockiot-scale\",\n                    style: this.scaleStyle,\n                    x1: this.scaleX,\n                    y1: (n*fs) + this.offsetY,\n                    x2: this.scaleX + h,\n                    y2: (n*fs) + this.offsetY\n                };\n                setSVGAttributes(scaleLine, scaleLineObj);\n                this.svg.scale.appendChild(scaleLine);\n                var mg = 0\n                if ( n === 0 || n === parseInt(this.$attrs.ticks)){\n                    mg = 4\n                }\n                var scaleText = document.createElementNS(NS, \"text\");\n                var scaleTextObj = {\n                    \"class\": \"scaleNumbersLinear\",\n                    //style: this.scaleTextColor + ';transform:translate3d(-50px, 4px, 51px);',\n                    //x: (this.offsetX+30)+h+20, \n                    //x: this.svgwidth/2 + this.offsetX + 5,\n                    x: this.svgwidth-15,// - this.barHeight,//xPos + this.barHeight * 1.2,\n                    y: (n*fs) + this.offsetY + 5,\n                }\n                setSVGAttributes(scaleText, scaleTextObj)\n                \n\n                var tick = parseInt(this.$attrs.max)/parseInt(this.$attrs.ticks)\n                txt = parseInt(this.$attrs.max)-(n*tick)/minor\n                if ( n % 10 === 0 || minor === 1){\n                    scaleText.textContent = parseInt(txt) //parseInt(n * (tick)) + (parseInt(this.$attrs.min))\n                    this.svg.scale.appendChild(scaleText);\n                }    \n                //n++\n            }\n        },\n    },\n    mounted(){\n        let id = this.$attrs.serial\n        if ( this.$attrs.variation === 'linear' && this.$attrs.svgwidth < this.$attrs.svgheight ){\n            this.svgwidth = this.$attrs.svgwidth\n            this.svgheight = this.$attrs.svgheight\n        }\n        if ( this.$attrs.svgwidth > this.$attrs.svgheight ){\n            this.svgwidth = this.$attrs.svgheight\n            this.svgheight = this.$attrs.svgwidth\n        }\n        var height = parseInt(this.svgheight) - ( this.offsetY*2 )\n        this.svg = this.$refs[id]\n        this.svg.scale = this.$refs['scale-' + id]\n        this.factor = height / parseInt(this.$attrs.max )\n        this.gaugeSize()\n        if ( parseInt(this.$attrs.value) > parseInt(this.$attrs.max) ){\n            this.$attrs.value = 0\n            \n        }\n        \n        this.pos = parseInt(this.$attrs.value) * this.factor\n        \n        if ( !! parseInt(this.$attrs.scale) ){\n            this.createScale()\n        }\n\n    }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rockiot.linear.vertical.svg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rockiot.linear.vertical.svg.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./rockiot.linear.vertical.svg.vue?vue&type=template&id=2cf6b5a6&\"\nimport script from \"./rockiot.linear.vertical.svg.vue?vue&type=script&lang=js&\"\nexport * from \"./rockiot.linear.vertical.svg.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}